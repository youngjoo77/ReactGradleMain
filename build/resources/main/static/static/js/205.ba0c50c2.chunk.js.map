{"version":3,"file":"static/js/205.ba0c50c2.chunk.js","mappings":"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","sources":["components/axios/useAxios.tsx","pages/Login.tsx"],"sourcesContent":["import axios, { AxiosError, AxiosResponse } from 'axios';\r\n\r\ninterface ServerError {\r\n\terrorMessage: string\r\n};\r\n\r\ninterface LoginFailType {\r\n\tstatus: number,\r\n\t error: string\r\n};\r\n\r\ninterface FetchData {\r\n\tmethod: string,\r\n\turl: string,\r\n\tdata?: {},\r\n\tloading: boolean\r\n};\r\n\r\nconst fetchAuth = async (fetchData: FetchData) => {\r\n\t\r\n\tconst baseUrl = \"/api\";\r\n\tconst method = fetchData.method;\r\n\tconst url = baseUrl + fetchData.url;\r\n\tconst data = fetchData.data;\r\n\tconst isloading = fetchData.loading;\r\n\tconst token = (localStorage.getItem('token') != null || localStorage.getItem('token') != \"\") ? ' Bearer ' + localStorage.getItem('token') : '';\r\n\tconst header = {\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': token\r\n\t\t}\n\t};\r\n\ttry {\r\n\t\tconst response: AxiosResponse<any, any> | false =\r\n\t\t\t(method === 'get' && (await axios.get(url, header))) ||\r\n\t\t\t(method === 'post' && (await axios.post(url, data, header))) ||\r\n\t\t\t(method === 'put' && (await axios.put(url, data, header))) ||\r\n\t\t\t(method === 'delete' && (await axios.delete(url, header)));\r\n\r\n\t\tif (response && response.data.error) {\r\n\t\t\tconsole.log((response.data as LoginFailType).error);\r\n\t\t\talert(\"Wrong ID or Password\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (!response) {\r\n\t\t\talert(\"false!\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn response;\r\n\t} catch (err) {\r\n\t\tif (axios.isAxiosError(err)) {\r\n\t\t\tconst serverError = err as AxiosError<ServerError>;\r\n\t\t\tif (serverError && serverError.response) {\r\n\t\t\t\tconsole.log(serverError.response.data);\r\n\t\t\t\talert(\"failed!\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(err);\r\n\t\talert(\"failed!\");\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst GET = (url: string, loading: boolean) => {\r\n\tconst response = fetchAuth({ method: 'get', url, loading });\r\n\treturn response;\r\n};\r\n\r\nconst POST = (url: string, data: {}, loading: boolean) => {\r\n\tconst response = fetchAuth({ method: 'post', url, data, loading })\r\n\treturn response;\r\n};\r\n\r\nconst PUT = async (url: string, data: {}, loading: boolean) => {\r\n\tconst response = fetchAuth({ method: 'put', url, data, loading });\r\n\treturn response;\r\n};\r\n\r\nconst DELETE = async (url: string, loading: boolean) => {\r\n\tconst response = fetchAuth({ method: 'delete', url, loading });\r\n\treturn response;\r\n};\r\n\r\nexport default { GET, POST, PUT, DELETE }","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport useAxios from '../components/axios/useAxios';\r\nimport {Button, Container} from \"react-bootstrap\"; \r\n\r\ninterface LoginToken {\r\n\tgrantType: string,\r\n\taccessToken: string,\r\n\ttokenExpiresIn: number\r\n}\r\n\r\nconst Login =() => {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [token, setToken] = useState(\"\");\r\n\tconst [grantType, setGrantType] = useState(\"\");\r\n\tconst [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n\tconst [hasLoginFailed, setHasLoginFailed] = useState(false);\r\n\r\n\tconst emailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.target.value)\r\n\t}\r\n\r\n\tconst passwordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPassword(e.target.value)\r\n\t}\r\n\t\r\n\tconst navigate = useNavigate();\r\n\t\r\n\tconst navigatehandler = () => {\r\n\t\tconsole.log(\"page 이동\");\r\n\t\tnavigate(\"/main\"); // page 이동\r\n\t}\r\n\t\r\n\tconst loginClicked = () => {\r\n\t\tconsole.log(\"loginClicked\");\r\n\t\tconst response = useAxios.POST('/auth/login', { 'email': email, 'password': password }, true);\r\n\t\tresponse.then((result) => {\r\n\t\t\tif (result !== null) {\r\n\t\t\t\tconst loginData: LoginToken = result.data;\r\n\r\n\t\t\t\tsetGrantType(loginData.grantType);\r\n\t\t\t\tsetToken(loginData.accessToken);\r\n\t\t\t\tsetEmail(email);\r\n\t\t\t\tlocalStorage.setItem('token', token);\r\n\t\t\t\tlocalStorage.setItem('email', email);\r\n\t\t\t\tlocalStorage.setItem('isAuthenticated', 'true');\r\n\t\t\t\tlocalStorage.setItem('tokenExpiresIn', String(loginData.tokenExpiresIn));\r\n\t\t\t\tconsole.log(\"login success!!!\");\r\n\t\t\t\tsetShowSuccessMessage(true);\r\n\t\t\t\tsetHasLoginFailed(false);\r\n\r\n\t\t\t\t// main 페이지로 이동\r\n\t\t\t\tnavigatehandler();\r\n\t\t\t}\r\n\t\t}).catch(() => {\r\n\t\t\tlocalStorage.setItem('isAuthenticated', 'false');\r\n\t\t\tsetShowSuccessMessage(false);\r\n\t\t\tsetHasLoginFailed(true);\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container className=\"panel\">\r\n\t\t\t\t<h1>Login</h1>\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<div>User Name</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"email\" value={email} onChange={(e) => emailChange(e)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<div>Password</div>\r\n\t\t\t\t\t<div><input type=\"password\" name=\"password\" value={password} onChange={passwordChange} /></div>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<Button className=\"btn btn-success\" onClick={loginClicked}>Login</Button>\r\n\t\t\t\t</section>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Login"],"names":["fetchAuth","fetchData","method","url","data","loading","token","localStorage","getItem","header","headers","axios","response","error","console","log","alert","serverError","useState","email","setEmail","password","setPassword","setToken","setGrantType","setShowSuccessMessage","setHasLoginFailed","navigate","useNavigate","Container","className","type","name","value","onChange","e","target","emailChange","Button","onClick","useAxios","then","result","loginData","grantType","accessToken","setItem","String","tokenExpiresIn","catch"],"sourceRoot":""}